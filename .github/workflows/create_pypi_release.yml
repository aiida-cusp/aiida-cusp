name: create-pypi-release

# run this hook everytime a new release is created for the package. this
# action checks for matching release tags, runs the pre-commit and pytest
# tests and checks that the documenation builds successfully. once all
# defined checks have passed, the tagged release version is pushed to the
# PyPi repository

on:
  push:
    tags:
      - "v[0-9]+.[0-9]+.[0-9]+*"

jobs:
  # NOTE: verify-pkg-version **has** to be run before verify-release-tag
  #       is run to guarantee that all version specifies defined inside
  #       the source match with the chosen release tag on GitHub
  verify-pkg-versions:
    #if: github.repository == 'aiida-cusp/aiida-cusp'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Setup Python 3.8
        uses: actions/setup-python@v4
        with:
          python-version: 3.8
      - name: Install `packaging` Dependency
        run: |
          python -m pip install --upgrade pip
          pip install packaging
      - name: Verify internal Package Versions
        run: |
          python .github/helpers/validate_pkg_versions.py
  verify-release-tag:
    needs: [verify-pkg-versions]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Setup Python 3.8
        uses: actions/setup-python@v4
        with:
          python-version: 3.8
      - name: Install `packaging` Dependency
        run: |
          python -m pip install --upgrade pip
          pip install packaging
      - name: Verify internal Package Versions
        run: |
          python .github/helpers/validate_pkg_version_and_tag.py $GITHUB_REF
  pre-commit:
    needs: [verify-pkg-versions]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Setup Python 3.8
        uses: actions/setup-python@v4
        with:
          python-version: 3.8
      - name: Install Pre-Commit Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -e .[develop]
      - name: Run pre-commit hook
        run: |
          pre-commit run --all-files
  run-pytest:
    needs: [verify-pkg-versions]
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
      matrix:
        python-version: ['3.8', '3.9', '3.10']
    services:
      postgres:
        image: postgres:10
        env:
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
      rabbitmq:
        image: rabbitmq:latest
        ports:
          - 5672:5672
    steps:
    - uses: actions/checkout@v3
    - name: Setup Python ${{ matrix.python_version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python_version }}
    - name: Install `aiida-cusp` Package and Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e .[develop]
        # print out the list of installed packages
        pip freeze
    - name: Run Unittests via `pytest`
      run: |
        pytest tests/
  deploy:
    needs:
      - verify-pkg-versions
      - verify-release-tag
      - pre-commit
      - run-pytest
    name: Build and Publish Package to PyPI
    runs-on: ubuntu-latest
    steps:
     - uses: actions/checkout@v3
     - name: Setup Python 3.8 Build Environment
       uses: actions/setup-python@v4
       with:
         python-version: "3.8"
     - name: Install pypa/build Requirement
       run: |
         python -m pip install --upgrade pip
         pip install build --user
     - name: Build PyPI Package
       run: |
         python -m build --sdist --outdir dist/
#     - name: Publish Distribution to Test-PyPI
#       if: startsWith(github.ref, 'refs/tags/v')
#       uses: pypa/gh-action-pypi-publish@release/v1
#       with:
#         password: ${{ secrets.TEST_PYPI_API_TOKEN }}
#         repository_url: https://test.pypi.org/legacy/
     - name: Publish Distribution to PyPI
       if: startsWith(github.ref, 'refs/tags/v')
       uses: pypa/gh-action-pypi-publish@release/v1
       with:
         password: ${{ secrets.PYPI_API_TOKEN }}
