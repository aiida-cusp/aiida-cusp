name: unittests

on:
  pull_request:
    path_ignore:
      - 'docs/**'

jobs:
  pre-commit:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Setup Python 3.8
        uses: actions/setup-python@v4
        with:
          python-version: 3.8
      - name: Install Pre-Commit Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -e .[develop]
      - name: Run pre-commit hook
        run: |
          pre-commit run --all-files
  run-pytest:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ['3.8', '3.9', '3.10']
    services:
      postgres:
        image: postgres:10
        env:
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
      rabbitmq:
        image: rabbitmq:latest
        ports:
          - 5672:5672
    steps:
    - uses: actions/checkout@v3
    - name: Setup Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install `aiida-cusp` Package and Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e .[develop]
        # print out the list of installed packages
        pip freeze
    - name: Run Unittests via `pytest`
      run: |
        pytest tests/
  coverage:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:10
        env:
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
      rabbitmq:
        image: rabbitmq:latest
        ports:
          - 5672:5672
    steps:
      - uses: actions/checkout@v3
      - name: Setup Python 3.8
        uses: actions/setup-python@v4
        with:
          python-version: 3.8
      - name: Install CodeCov Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -e .[develop]
          # print out the list of installed packages
          pip freeze
      - name: Run pytest and record the coverage
        run: |
            pytest --cov-report=xml --cov=aiida_cusp tests/
      - name: Upload recorded coverage report
        uses: codecov/codecov-action@v3
        with:
          name: aiida-cusp-coverage
          token: ${{ secrets.CODECOV_TOKEN }}
          file: ./coverage.xml
          fail_ci_if_error: false
  ci-branch-protect:
    needs: [pre-commit, run-pytest]
    runs-on: ubuntu-latest
    steps:
      - name: CI Branch Protect
        run: exit 0
