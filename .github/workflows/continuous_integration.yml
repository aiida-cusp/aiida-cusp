name: tests

on: [push, pull_request]

jobs:

  pre-commit:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Setup Python 3.8
        uses: actions/setup-python@v2
        with:
          python-version: 3.8

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install .[develop]

      - name: Run pre-commit hook
        run: |
          pre-commit run --all-files

  run-pytest:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: [3.6, 3.7.7, 3.8]
    services:
      postgres:
        image: postgres:10
        env:
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
      rabbitmq:
        image: rabbitmq:latest
        ports:
          - 5672:5672

    steps:
    - uses: actions/checkout@v2

    - name: Install pg_ctl on host machine
      run: |
        # install postgresql on the host machine as well since pg_ctl has to
        # be available for AiiDA to work
        sudo apt update
        sudo apt install postgresql-10
        # check pg_ctl is available
        /usr/lib/postgresql/10/bin/pg_ctl -V

    - name: Setup Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install aiida-cusp package and dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e .[develop]
        reentry scan
        # print out the list of installed packages
        pip freeze

    - name: Test package using pytest
      run: |
        pytest tests

  docs:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Setup Python 3.8
        uses: actions/setup-python@v2
        with:
          python-version: 3.8

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install .[docs]

      - name: Build documentation
        run: |
          SPHINXOPTS='-nW' make -C docs html
